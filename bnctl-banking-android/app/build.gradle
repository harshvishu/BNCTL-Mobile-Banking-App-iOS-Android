plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
//    id 'kotlin-kapt'
//    id 'dagger.hilt.android.plugin'
}

static def getLocalIPv4() {
    def ip4s = []
    NetworkInterface.getNetworkInterfaces()
            .findAll { it.isUp() && !it.isLoopback() && !it.isVirtual() }
            .each {
                it.getInetAddresses()
                        .find { !it.isLoopbackAddress() && it instanceof Inet4Address && it.getHostAddress().contains('192.168') }
                        .each { ip4s << it.getHostAddress() }
            }
    return ip4s[0]
}

android {
    signingConfigs {
        uat {
        }
    }
    compileSdkVersion 33
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "tl.bnctl.banking"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "0.0.18"
        resConfigs 'en', 'pt'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Common configuration for all build types. Those can easily be overridden in the respective build type
        buildConfigField 'Double', 'MAPS_COUNTRY_LATITUDE', '42.745867'
        buildConfigField 'Double', 'MAPS_COUNTRY_LONGITUDE', '25.523786'
        buildConfigField 'Double', 'MAPS_COUNTRY_ZOOM', '6.5'
        buildConfigField 'String[]', 'SUPPORTED_LANGUAGES', '{"pt", "en"}'
        buildConfigField 'Integer', 'NUMBER_DECIMAL_PLACES', '2'
        buildConfigField 'Integer', 'AMOUNT_NUMBER_MAX_LENGTH', '16'
        buildConfigField 'String', 'NUMBER_DECIMAL_SEPARATOR', '"."'
        buildConfigField 'String', 'BANK_SWIFT_CODE', '"BNCTTLDD"'
        buildConfigField 'String', 'ACCOUNT_STATEMENT_LIMIT', '""' // add empty string for no limit
        buildConfigField 'String', 'UTILITY_BILL_ERROR_STATUS', '"errBillDueAmountRetrieval"'
        buildConfigField 'String', 'DATE_FORMAT', '"dd.MM.yyyy"'
        buildConfigField 'String', 'TIME_FORMAT', '"hh:mm"'
        buildConfigField 'String', 'SPECIAL_ACCOUNT_CODE', '"9CSPEC"'

        // Change this to true if you want the transfer to execute via the standard maker/checker flow
        // Keep as false if you want the transfers to be executed immediately and not create pending transfer after summary view
        buildConfigField 'Boolean', 'MAKER_CHECKER_FLOW', 'false'

        // Implementation-specific configuration
        buildConfigField 'Boolean', 'USE_OTP_ON_LOGIN', 'false'

        // Decides which balances to be shown in the account balances dialog
        // See AccountBalancesDialogFragment for all available constants for this configuration
        buildConfigField 'String[]', 'SUPPORTED_ACCOUNT_BALANCES', '{"current", "available"}'

        // If this is true, the app will try to use the currently saved session on the login screen.
        // This is useful for debugging when you restart the app frequently and don't want to enter the username and password each time
        // Please set this to true in the local.properties file, so you don't accidentally commit it
        // NOTE: This is using String instead of Boolean, because properties overridden in local.properties are always string
        buildConfigField 'String', 'CHECK_CURRENT_USER_ON_LOGIN', '"false"'

        // Decides which transfer types are available in the template creation menu
        // Valid values: intrabank, interbank, international
        buildConfigField 'String[]', 'SUPPORTED_TEMPLATE_TRANSFER_TYPES', '{"intrabank"}'

        buildConfigField 'Boolean', 'HARDCODE_LOGIN_DETAILS', 'false'
        buildConfigField 'Boolean', 'SHOW_LOADER_FOR_ACCOUNTS', 'true'
        buildConfigField 'Integer', 'TRANSFER_REASON_MAX_LENGTH', '250'
        buildConfigField 'Integer', 'STATEMENTS_PAGINATION_PAGE_SIZE', '10'
        signingConfig signingConfigs.debug
    }

    buildTypes {
        // Local Environment
        debug {
//            buildConfigField 'String', 'BASE_URL', "\"http://${getLocalIPv4()}:8005/api/\"" // when backend is running locally
            buildConfigField 'String', 'BASE_URL', '"http://192.168.132.120:8095/api/"' // dev env
            buildConfigField 'String', 'ENV_NAME', '"debug"'
            buildConfigField 'Boolean', 'SHOW_LOADER_FOR_ACCOUNTS', 'true'
            debuggable true
            manifestPlaceholders = [usesCleartextTraffic: "true"]
        }
        // Test Environment
        qa {
            buildConfigField 'String', 'BASE_URL', '"http://192.168.132.120:8095/api/"'
            buildConfigField 'String', 'ENV_NAME', '"debug"'
            debuggable false
            manifestPlaceholders = [usesCleartextTraffic: "true"]
        }
        // UAT Environment
        uat {
            buildConfigField 'String', 'BASE_URL', '"http://192.168.90.51:8095/api/"'
            buildConfigField 'String', 'ENV_NAME', '"uat"'
            debuggable false
            manifestPlaceholders = [usesCleartextTraffic: "true"]
        }
        // Prod Environment
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', '"https://www.ibanking.bnctl.tl/api/"'
            buildConfigField 'String', 'ENV_NAME', '"prod"'
            manifestPlaceholders = [usesCleartextTraffic:"false"]
        }
        applicationVariants.all {
            variant ->
                variant.outputs.each {
                    output -> {
                        println variant
                        output.outputFileName = "bnctl-banking-${variant.name}-${variant.versionName}.apk"
                    }
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'tl.bnctl.banking'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def room_version = "2.3.0"
    def nav_version = "2.5.2"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    // Android SDK stuff
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    // HTTP Operations
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    // JSON
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Firebase Crashlytics (Kotlin)
    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-base:18.1.0'

    // Room-related dependencies
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.5.0-alpha02")

    // Google Maps
    implementation("com.google.android.gms:play-services-maps:18.0.2")
    implementation("com.google.android.gms:play-services-location:20.0.0")
    implementation("com.google.maps.android:android-maps-utils:1.1.0")

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}